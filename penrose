//https://rawgit.com/joelpurra/jqnpm/master/resources/logotype/penrose-triangle.svg



#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;

float triangle (vec2 st, 
                vec2 p0, vec2 p1, vec2 p2, 
                float smoothness){
  vec3 e0, e1, e2;

  e0.xy = normalize(p1 - p0).yx * vec2(+1.0, -1.0);
  e1.xy = normalize(p2 - p1).yx * vec2(+1.0, -1.0);
  e2.xy = normalize(p0 - p2).yx * vec2(+1.0, -1.0);

  e0.z = dot(e0.xy, p0) - smoothness;
  e1.z = dot(e1.xy, p1) - smoothness;
  e2.z = dot(e2.xy, p2) - smoothness;
    
  float a = max(0.0, dot(e0.xy, st) - e0.z);
  float b = max(0.0, dot(e1.xy, st) - e1.z);
  float c = max(0.0, dot(e2.xy, st) - e2.z);
    
  return smoothstep(0.01, 1e-7, length(vec3(a, b, c)));
}

vec3 dotpoint(vec2 _ptx, vec2 _st) {
    vec2 toCenter = _ptx-_st;
    float pct = length(toCenter);
    return vec3( step(pct,0.01) );
}

void main() {
    vec2 st = gl_FragCoord.xy/u_resolution.xy;
    st.x *= u_resolution.x/u_resolution.y;

    // Remap the space to -1. to 1.
  	st = st *2.-1.;
    
    float smoothborder = 0.015;
    vec3 color = vec3(0.);
    
    vec2 p0 = vec2(0.0, 0.0);
    vec2 toCenter = p0-st;
    float pct = length(toCenter);
    //color += step(pct, 0.01);
    
    vec2 p1 = vec2(-0.616175, 0.8433116666666666); 
    vec2 p2 = vec2(-0.4138300000000003, 0.9619466666666666); 
    vec2 p3 = vec2(-0.41383000000000003, -0.48673333333333346); 
    vec2 p4 = vec2(0.42853499999999994, -0.00038333333333341103); 
    vec2 p5 = vec2(0.6352899999999999, -0.11974833333333335); 
    vec2 p6 = vec2(-0.616175, -0.8422783333333334); 

    color += dotpoint(p1, st);
    color += dotpoint(p2, st);
    color += dotpoint(p3, st);
    color += dotpoint(p4, st);
    color += dotpoint(p5, st);
    color += dotpoint(p6, st);
    
    color += triangle(st, p1, p3, p2, smoothborder);
    color += triangle(st, p1, p6, p3, smoothborder);
    color += triangle(st, p6, p4, p3, smoothborder);
    color += triangle(st, p6, p5, p4, smoothborder);
    

    gl_FragColor = vec4(color,1.0);
}
