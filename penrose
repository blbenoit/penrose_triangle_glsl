//https://rawgit.com/joelpurra/jqnpm/master/resources/logotype/penrose-triangle.svg

#ifdef GL_ES
precision mediump float;
#endif
#define TWO_PI 6.283185307179586

uniform vec2 u_resolution;
uniform vec2 u_mouse;
uniform float u_time;

mat2 rotate2d(float _angle){
    return mat2(cos(_angle),-sin(_angle),
                sin(_angle),cos(_angle));
}

float triangle (vec2 st, 
                vec2 p0, vec2 p1, vec2 p2, 
                float smoothness){
  vec3 e0, e1, e2;

  e0.xy = normalize(p1 - p0).yx * vec2(+1.0, -1.0);
  e1.xy = normalize(p2 - p1).yx * vec2(+1.0, -1.0);
  e2.xy = normalize(p0 - p2).yx * vec2(+1.0, -1.0);

  e0.z = dot(e0.xy, p0) - smoothness;
  e1.z = dot(e1.xy, p1) - smoothness;
  e2.z = dot(e2.xy, p2) - smoothness;
    
  float a = max(0.0, dot(e0.xy, st) - e0.z);
  float b = max(0.0, dot(e1.xy, st) - e1.z);
  float c = max(0.0, dot(e2.xy, st) - e2.z);
    
  return smoothstep(0.01, 1e-7, length(vec3(a, b, c)));
}

vec3 dotpoint(vec2 _ptx, vec2 _st) {
    vec2 toCenter = _ptx-_st;
    float pct = length(toCenter);
    return vec3( step(pct,0.01) );
}

void main() {
    vec2 st = gl_FragCoord.xy/u_resolution.xy;
    st.x *= u_resolution.x/u_resolution.y;

    // Remap the space to -1. to 1.
  	st = st *2.-1.;
    
    float smoothborder = 0.01;
    vec3 color = vec3(0.);
    
    vec2 p0 = vec2(0.0, 0.0);
    vec2 toCenter = p0-st;
    float pct = length(toCenter);
    //color += step(pct, 0.01);
    
    vec2 p1 = vec2(-0.49294            , 0.6746493333333333    ); 
    vec2 p2 = vec2(-0.33106400000000025, 0.7695573333333333    ); 
    vec2 p3 = vec2(-0.331064           , -0.38938666666666677  ); 
    vec2 p4 = vec2(0.34282799999999997 , -0.0003066666666667288); 
    vec2 p5 = vec2(0.5082319999999999  , -0.09579866666666667  ); 
    vec2 p6 = vec2(-0.49294            , -0.6738226666666667   ); 

    /*color += dotpoint(p1, st);
    color += dotpoint(p2, st);
    color += dotpoint(p3, st);
    color += dotpoint(p4, st);
    color += dotpoint(p5, st);
    color += dotpoint(p6, st);*/
    vec3 faceColor = vec3(0.0);
    
    for (float i = 0.0; i < 3.0; i++) {
        faceColor  = vec3(step(i, 0.)*1.0, step(1., i)*1.0, step(2., i)*1.0);

        color += triangle(st, p1, p3, p2, smoothborder) * faceColor;
        color += triangle(st, p1, p6, p3, smoothborder) * faceColor;
        color += triangle(st, p6, p4, p3, smoothborder) * faceColor;
        color += triangle(st, p6, p5, p4, smoothborder) * faceColor;

        st *= rotate2d( TWO_PI/3.0 );
    }
    
    gl_FragColor = vec4(color,1.0);
}
